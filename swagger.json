{
  "swagger": "2.0",
  "info": {
    "description": "Public API for managing Clever-Cloud data and products",
    "version": "1.0.0",
    "title": "Clever-Cloud API",
    "contact": {}
  },
  "host": "api.clever-cloud.com",
  "basePath": "/v2",
  "tags": [{
    "name": "Default",
    "description": "Default section"
  }],
  "schemes": ["https"],
  "paths": {
    "/application/{appId}/environment": {
      "get": {
        "responses": {
          "default": {
            "description": "getEnv"
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "token",
          "required": false,
          "in": "query",
          "type": "string"
        }],
        "tags": ["all"]
      },
      "put": {
        "responses": {
          "default": {
            "description": "updateEnv"
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "token",
          "required": false,
          "in": "query",
          "type": "string"
        }],
        "tags": ["all"]
      }
    },
    "/authorize": {
      "post": {
        "operationId": "postAuthorize",
        "tags": ["all"],
        "description": "Handled by our API.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "authorize"
          }
        }
      }
    },
    "/events/event-socket": {
      "get": {
        "description": "Retrieve events as they come through a websocket connection. To have authorization, you have to send a `{ \"message_type\": \"oauth\", \"authorization\": \"oauth authorization string\" }` message",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all", "events"]
      }
    },
    "/github": {
      "get": {
        "operationId": "getGithub",
        "tags": ["all", "github"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "startGithub",
            "schema": {
              "$ref": "#/definitions/Transaction Id"
            }
          }
        }
      }
    },
    "/github/applications": {
      "get": {
        "operationId": "getGithubApplications",
        "tags": ["all", "applications", "github"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getGithubApplications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      }
    },
    "/github/callback": {
      "get": {
        "operationId": "getGithubCallback",
        "tags": ["all", "github"],
        "parameters": [{
          "name": "code",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "state",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "error",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "error_description",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "error_uri",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "Cookie",
          "in": "header",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "githubCallback"
          }
        }
      }
    },
    "/github/emails": {
      "get": {
        "operationId": "getGithubEmails",
        "tags": ["all", "github"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getGithubEmails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/github/keys": {
      "get": {
        "operationId": "getGithubKeys",
        "tags": ["all", "github"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getGithubKeys",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Key"
              }
            }
          }
        }
      }
    },
    "/github/link": {
      "delete": {
        "operationId": "deleteGithubLink",
        "tags": ["all", "github"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "unlinkGithub"
          }
        }
      },
      "get": {
        "operationId": "getGithubLink",
        "tags": ["all", "github"],
        "parameters": [{
          "name": "transactionId",
          "in": "query",
          "description": "From GET /github",
          "required": false,
          "type": "string"
        }, {
          "name": "redirectUrl",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "linkGithub"
          }
        }
      }
    },
    "/github/login": {
      "get": {
        "operationId": "getGithubLogin",
        "tags": ["all", "github"],
        "parameters": [{
          "name": "redirectUrl",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "fromAuthorize",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "githubLogin"
          }
        }
      }
    },
    "/github/redeploy": {
      "post": {
        "operationId": "postGithubRedeploy",
        "tags": ["all", "github"],
        "parameters": [{
          "name": "User-Agent",
          "in": "header",
          "required": false,
          "type": "string"
        }, {
          "name": "X-Github-Event",
          "in": "header",
          "required": false,
          "type": "string"
        }, {
          "name": "X-Hub-Signature",
          "in": "header",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "redeployApp"
          }
        }
      }
    },
    "/github/signup": {
      "get": {
        "operationId": "getGithubSignup",
        "tags": ["all", "github"],
        "parameters": [{
          "name": "redirectUrl",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "fromAuthorize",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "githubSignup"
          }
        }
      },
      "post": {
        "operationId": "postGithubSignup",
        "tags": ["all", "github"],
        "parameters": [{
          "name": "transactionId",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "name",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "otherId",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "otherEmail",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "password",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "autoLink",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "terms",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "finsihGithubSignup"
          }
        }
      }
    },
    "/github/username": {
      "get": {
        "operationId": "getGithubUsername",
        "tags": ["all", "github"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getGithubUsername",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/logs/logs-chunked/{appId}": {
      "get": {
        "description": "Retrieve logs as they come through a chunked, never-ending response",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "parameters": [{
          "name": "appId",
          "description": "Application Id",
          "required": true,
          "type": "string",
          "in": "path"
        }, {
          "name": "download",
          "description": "Tell the user-agent to download the body as a file",
          "required": false,
          "type": "boolean",
          "in": "query"
        }],
        "tags": ["all", "logs"]
      }
    },
    "/logs/logs-socket/{appId}": {
      "get": {
        "description": "Retrieve logs as they come through a websocket connection. To have authorization, you have to send a `{ \"message_type\": \"oauth\", \"authorization\": \"oauth authorization string\" }` message",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "parameters": [{
          "name": "appId",
          "description": "Application Id",
          "required": true,
          "type": "string",
          "in": "path"
        }, {
          "name": "since",
          "description": "Only fetch logs newer than this (ISO-8601 formatted) date",
          "required": false,
          "type": "string",
          "format": "date-time",
          "in": "query"
        }, {
          "name": "filter",
          "description": "A pattern to filter with",
          "required": false,
          "type": "string",
          "in": "query"
        }, {
          "name": "deployment_id",
          "description": "Only fetch logs emitted by this deployment",
          "required": false,
          "type": "string",
          "in": "query"
        }],
        "tags": ["all", "logs"]
      }
    },
    "/logs/{appId}": {
      "get": {
        "description": "Fetch the logs for a given application",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "parameters": [{
          "name": "appId",
          "description": "Application Id",
          "required": true,
          "type": "string",
          "in": "path"
        }, {
          "name": "limit",
          "description": "Number of lines to return",
          "required": false,
          "type": "integer",
          "format": "int32",
          "in": "query"
        }, {
          "name": "order",
          "description": "Logs order",
          "required": false,
          "type": "string",
          "enum": ["asc", "desc"],
          "default": "desc",
          "in": "query"
        }, {
          "name": "after",
          "description": "Lowest bound for logs date, ISO 8601",
          "required": false,
          "type": "string",
          "format": "date-time",
          "in": "query"
        }, {
          "name": "before",
          "description": "Highest bounds for logs date, ISO 8601",
          "required": false,
          "type": "string",
          "format": "date-time",
          "in": "query"
        }, {
          "name": "filter",
          "description": "A pattern to filter with",
          "required": false,
          "type": "string",
          "in": "query"
        }, {
          "name": "deployment_id",
          "description": "Only fetch logs emitted by this deployment",
          "required": false,
          "type": "string",
          "in": "query"
        }],
        "tags": ["all", "logs"]
      }
    },
    "/logs/{appId}/drains": {
      "get": {
        "description": "Fetch the logs drains for a given application",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all", "logs"]
      },
      "post": {
        "description": "Add a log drain for a given application",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all", "logs"]
      }
    },
    "/logs/{appId}/drains/:idOrUrl": {
      "get": {
        "description": "Fetch the logs drain by id or url for a given application",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all", "logs"]
      },
      "delete": {
        "description": "Delete the logs drain by id or url for a given application",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all", "logs"]
      }
    },
    "/newsfeeds/blog": {
      "get": {
        "operationId": "getNewsfeedsBlog",
        "tags": ["all"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getBlogFeed"
          }
        }
      }
    },
    "/newsfeeds/engineering": {
      "get": {
        "operationId": "getNewsfeedEngineering",
        "tags": ["all"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getEngineeringFeed"
          }
        }
      }
    },
    "/notifications/emailhooks/{ownerId}": {
      "post": {
        "description": "create a hook for e-mail notifications",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all"]
      },
      "get": {
        "description": "list created e-mail hooks",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all"]
      }
    },
    "/notifications/emailhooks/{ownerId}/:id": {
      "put": {
        "description": "edit an e-mail hook",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all"]
      },
      "delete": {
        "description": "delete an e-mail hook",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all"]
      }
    },
    "/notifications/info/events": {
      "get": {
        "description": "list available events",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all", "events"]
      }
    },
    "/notifications/info/webhookformats": {
      "get": {
        "description": "list available webhook formats",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all"]
      }
    },
    "/notifications/webhooks/{ownerId}": {
      "post": {
        "description": "create a hook for notifications",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all"]
      },
      "get": {
        "description": "list created hooks",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all"]
      }
    },
    "/notifications/webhooks/{ownerId}/:id": {
      "put": {
        "description": "edit a hook",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all"]
      },
      "delete": {
        "description": "delete a hook",
        "responses": {
          "default": {
            "description": "<No description>"
          }
        },
        "tags": ["all"]
      }
    },
    "/oauth/access_token": {
      "post": {
        "operationId": "postOauthAccessToken",
        "tags": ["all", "oauth"],
        "parameters": [{
          "name": "oauth_consumer_key",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_token",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_signature_method",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_signature",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_timestamp",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_nonce",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_version",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_verifier",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_callback",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_token_secret",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_callback_confirmed",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "postAccessTokenRequest"
          }
        }
      }
    },
    "/oauth/access_token_query": {
      "post": {
        "responses": {
          "default": {
            "description": "postAccessTokenRequestQuery"
          }
        },
        "parameters": [{
          "name": "oauth_consumer_key",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_token",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_signature_method",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_signature",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_timestamp",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_nonce",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_version",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_verifier",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_callback",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_token_secret",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_callback_confirmed",
          "required": false,
          "in": "query",
          "type": "string"
        }],
        "tags": ["all", "oauth"]
      }
    },
    "/oauth/authorize": {
      "get": {
        "operationId": "getOauthAuthorize",
        "tags": ["all", "oauth"],
        "parameters": [{
          "name": "oauth_token",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "Cookie",
          "in": "header",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "authorizeForm"
          }
        }
      },
      "post": {
        "operationId": "postOauthAuthorize",
        "tags": ["all", "oauth"],
        "parameters": [{
          "name": "almighty",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "access_organisations",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "manage_organisations",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "manage_organisations_services",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "manage_organisations_applications",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "manage_organisations_members",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "access_organisations_bills",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "access_organisations_credit_count",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "access_organisations_consumption_statistics",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "access_personal_information",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "manage_personal_information",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "manage_ssh_keys",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "manage_services",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "manage_applications",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "access_bills",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "access_credit_count",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "access_consumption_statistics",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "Cookie",
          "in": "header",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "authorizeToken"
          }
        }
      }
    },
    "/oauth/request_token": {
      "post": {
        "operationId": "postOauthRequestToken",
        "tags": ["all", "oauth"],
        "parameters": [{
          "name": "oauth_consumer_key",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_token",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_signature_method",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_signature",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_timestamp",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_nonce",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_version",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_verifier",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_callback",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_token_secret",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "oauth_callback_confirmed",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "postReqTokenRequest"
          }
        }
      }
    },
    "/oauth/request_token_query": {
      "post": {
        "responses": {
          "default": {
            "description": "postReqTokenRequestQueryString"
          }
        },
        "parameters": [{
          "name": "oauth_consumer_key",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_token",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_signature_method",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_signature",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_timestamp",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_nonce",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_version",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_verifier",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_callback",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_token_secret",
          "required": false,
          "in": "query",
          "type": "string"
        }, {
          "name": "oauth_callback_confirmed",
          "required": false,
          "in": "query",
          "type": "string"
        }],
        "tags": ["all", "oauth"]
      }
    },
    "/oauth/rights": {
      "get": {
        "operationId": "getOauthRights",
        "tags": ["all", "oauth"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getAvailableRights",
            "schema": {
              "$ref": "#/definitions/Rights"
            }
          }
        }
      }
    },
    "/organisations": {
      "get": {
        "operationId": "getOrganisations",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "user",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getUserOrganisations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Organisation"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisations",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeOrganisation"
          }
        }],
        "responses": {
          "200": {
            "description": "createOrganisation",
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          }
        }
      }
    },
    "/organisations/{id}": {
      "delete": {
        "operationId": "deleteOrganisationsId",
        "tags": ["all", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteOrganisation"
          }
        }
      },
      "get": {
        "operationId": "getOrganisationsId",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getOrganisation",
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsId",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeOrganisation"
          }
        }],
        "responses": {
          "200": {
            "description": "editOrganisation",
            "schema": {
              "$ref": "#/definitions/Organisation"
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders": {
      "get": {
        "operationId": "getOrganisationsIdAddonproviders",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Get all informations about all providers.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Provider"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisationsIdAddonproviders",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeAddonProvider"
          }
        }],
        "responses": {
          "200": {
            "description": "createProvider",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}": {
      "get": {
        "operationId": "getOrganisationsIdAddonprovidersProviderId",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Get all informations about given provider.",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdAddonprovidersProviderId",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeAddonProvider"
          }
        }],
        "responses": {
          "200": {
            "description": "updateProviderInfos",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/features": {
      "get": {
        "operationId": "getOrganisationsIdAddonprovidersProviderIdFeatures",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getProviderFeatures",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feature"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisationsIdAddonprovidersProviderIdFeatures",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeFeature"
          }
        }],
        "responses": {
          "200": {
            "description": "addProviderFeature",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/features/{featureId}": {
      "delete": {
        "operationId": "deleteOrganisationsIdAddonprovidersProviderIdFeaturesFeatureId",
        "tags": ["all", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "featureId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteProviderFeature"
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/plans": {
      "get": {
        "operationId": "getOrganisationsIdAddonprovidersProviderIdPlans",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getProviderPlans",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisationsIdAddonprovidersProviderIdPlans",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabePlan"
          }
        }],
        "responses": {
          "200": {
            "description": "addProviderPlan",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/plans/{planId}": {
      "delete": {
        "operationId": "deleteOrganisationsIdAddonprovidersProviderIdPlansPlanId",
        "tags": ["all", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "planId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteProviderPlan"
          }
        }
      },
      "get": {
        "operationId": "getOrganisationsIdAddonprovidersProviderIdPlansPlanId",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "planId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getProviderPlan",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdAddonprovidersProviderIdPlansPlanId",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "planId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabePlan"
          }
        }],
        "responses": {
          "200": {
            "description": "editProviderPlan",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/plans/{planId}/features/{featureName}": {
      "delete": {
        "operationId": "deleteOrganisationsIdAddonprovidersProviderIdPlansPlanIdFeaturesFeatureName",
        "tags": ["all", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "featureName",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "planId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteProviderPlanFeature"
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdAddonprovidersProviderIdPlansPlanIdFeaturesFeatureName",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "featureName",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "planId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabePlanFeature"
          }
        }],
        "responses": {
          "200": {
            "description": "editProviderPlanFeature"
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/sso": {
      "get": {
        "operationId": "getOrganisationsIdAddonsAddonIdSso",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "getSSOData",
            "schema": {
              "$ref": "#/definitions/AddonProviderSso"
            }
          }
        },
        "parameters": [{
          "name": "providerId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }]
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/tags": {
      "get": {
        "operationId": "getOrganisationsIdAddonprovidersProviderIdTags",
        "tags": ["all", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getProviderTags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addonproviders/{providerId}/testers": {
      "post": {
        "operationId": "postOrganisationsIdAddonprovidersProviderIdTesters",
        "tags": ["all", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "providerId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "addBetaTester"
          }
        }
      }
    },
    "/organisations/{id}/addons": {
      "get": {
        "operationId": "getOrganisationsIdAddons",
        "tags": ["all", "addons", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddons",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Addon"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisationsIdAddons",
        "tags": ["all", "addons", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeAddon"
          }
        }],
        "responses": {
          "200": {
            "description": "provisionAddon",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/preorders": {
      "post": {
        "responses": {
          "default": {
            "description": "preorderAddon"
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/WannabeAddon"
          }
        }],
        "tags": ["all", "addons", "organisations"]
      }
    },
    "/organisations/{id}/addons/{addonId}": {
      "delete": {
        "operationId": "deleteOrganisationsIdAddonsAddonId",
        "tags": ["all", "addons", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deprovisionAddon"
          }
        }
      },
      "get": {
        "operationId": "getOrganisationsIdAddonsAddonId",
        "tags": ["all", "addons", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddon",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdAddonsAddonId",
        "tags": ["all", "addons", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeAddon"
          }
        }],
        "responses": {
          "200": {
            "description": "Update addon information",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/applications": {
      "get": {
        "operationId": "getOrganisationsIdAddonsAddonIdApplications",
        "tags": ["all", "addons", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationsLinkedToAddon",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/env": {
      "get": {
        "operationId": "getOrganisationsIdAddonsAddonIdEnv",
        "tags": ["all", "addons", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddonEnv",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListEnv"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/plan": {
      "put": {
        "operationId": "putOrganisationsIdAddonsAddonIdPlan",
        "tags": ["all", "addons", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabePlan"
          }
        }],
        "responses": {
          "200": {
            "description": "Update plan of an add-on.",
            "schema": {
              "$ref": "#/definitions/Plan"
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/sso": {
      "get": {
        "operationId": "getOrganisationsIdAddonsAddonIdSso",
        "tags": ["all", "addons", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getSSOData",
            "schema": {
              "$ref": "#/definitions/Sso"
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/tags": {
      "get": {
        "operationId": "getOrganisationsIdAddonsAddonIdTags",
        "tags": ["all", "addons", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddonTags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/addons/{addonId}/tags/{tag}": {
      "delete": {
        "operationId": "deleteOrganisationsIdAddonsAddonIdTagsTag",
        "tags": ["all", "addons", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "tag",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteAddonTag"
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdAddonsAddonIdTagsTag",
        "tags": ["all", "addons", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "tag",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "responses": {
          "200": {
            "description": "addAddonTag"
          }
        }
      }
    },
    "/organisations/{id}/applications": {
      "get": {
        "operationId": "getOrganisationsIdApplications",
        "tags": ["all", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAllApplications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates an application. If you want to create a Github app, you need to replace the oauthApp field with what you will find here: https://github.com/CleverCloud/doc.clever-cloud.com/issues/179",
        "operationId": "postOrganisationsIdApplications",
        "tags": ["all", "applications", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeApplication"
          }
        }],
        "responses": {
          "200": {
            "description": "addApplication",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}": {
      "delete": {
        "operationId": "deleteOrganisationsIdApplicationsAppId",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteApplication"
          }
        }
      },
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppId",
        "tags": ["all", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplication",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdApplicationsAppId",
        "tags": ["all", "applications", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeApplication"
          }
        }],
        "responses": {
          "200": {
            "description": "editApplication",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/addons": {
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdAddons",
        "tags": ["all", "addons", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddonsLinkedToApplication",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Addon"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisationsIdApplicationsAppIdAddons",
        "tags": ["all", "addons", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "responses": {
          "200": {
            "description": "linkAddonToApplication"
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/addons/env": {
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdAddonsEnv",
        "tags": ["all", "addons", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getEnvOfAddonsLinkedToApplication",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Env"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/addons/{addonId}": {
      "delete": {
        "operationId": "deleteOrganisationsIdApplicationsAppIdAddonsAddonId",
        "tags": ["all", "addons", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "unlinkAddonFromApplication"
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/branch": {
      "put": {
        "responses": {
          "default": {
            "description": "setApplicationBranch"
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "organisations"]
      }
    },
    "/organisations/{id}/applications/{appId}/branches": {
      "get": {
        "responses": {
          "default": {
            "description": "getApplicationBranches"
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "organisations"]
      }
    },
    "/organisations/{id}/applications/{appId}/dependencies": {
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdDependencies",
        "tags": ["all", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationDependencies",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/dependencies/env": {
      "get": {
        "responses": {
          "200": {
            "description": "Get env variables defined by application dependencies",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedAppEnv"
              }
            }
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "organisations"]
      }
    },
    "/organisations/{id}/applications/{appId}/dependencies/{dependencyId}": {
      "delete": {
        "operationId": "deleteOrganisationsIdApplicationsAppIdDependenciesDependencyId",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "dependencyId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteApplicationDependency"
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdApplicationsAppIdDependenciesDependencyId",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "dependencyId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "responses": {
          "200": {
            "description": "addApplicationDependency"
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/dependents": {
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdDependents",
        "tags": ["all", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationDependents",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/deployments": {
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdDeployments",
        "tags": ["all", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "offset",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "action",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationDeploymentsForOrga",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deployment"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/deployments/{deploymentId}/instances": {
      "delete": {
        "operationId": "deleteOrganisationsIdApplicationsAppIdDeploymentsDeploymentIdInstances",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "deploymentId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationDeploymentsForOrga"
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/env": {
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdEnv",
        "tags": ["all", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationEnv",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListEnv"
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdApplicationsAppIdEnv",
        "tags": ["all", "applications", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "type": "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "editApplicationEnvironment",
            "schema": {
              "$ref": "#/definitions/ListEnv"
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/env/{envName}": {
      "delete": {
        "operationId": "deleteOrganisationsIdApplicationsAppIdEnvEnvName",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "envName",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "removeApplicationEnv"
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdApplicationsAppIdEnvEnvName",
        "tags": ["all", "applications", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "envName",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeEnv"
          }
        }],
        "responses": {
          "200": {
            "description": "editApplicationEnv",
            "schema": {
              "$ref": "#/definitions/ListEnv"
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/exposed_env": {
      "get": {
        "responses": {
          "default": {
            "description": "getExposedEnv"
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "organisations"]
      },
      "put": {
        "responses": {
          "default": {
            "description": "updateExposedEnv",
            "schema": {
              "$ref": "#/definitions/ListEnv"
            }
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "organisations"]
      }
    },
    "/organisations/{id}/applications/{appId}/instances": {
      "delete": {
        "operationId": "deleteOrganisationsIdApplicationsAppIdInstances",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "undeployApplication"
          }
        }
      },
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdInstances",
        "tags": ["all", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationInstances",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppInstance"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisationsIdApplicationsAppIdInstances",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "commit",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "redeployApplication"
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/instances/{instanceId}": {
      "get": {
        "responses": {
          "default": {
            "description": "getApplicationInstance",
            "schema": {
              "$ref": "#/definitions/AppInstance"
            }
          }
        },
        "parameters": [{
          "name": "instanceId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "organisations"]
      }
    },
    "/organisations/{id}/applications/{appId}/tags": {
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdTags",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationTags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/tags/{tag}": {
      "delete": {
        "operationId": "deleteOrganisationsIdApplicationsAppIdTagsTag",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "tag",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteApplicationTag"
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdApplicationsAppIdTagsTag",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "tag",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "responses": {
          "200": {
            "description": "addApplicationTag"
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/vhosts": {
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdVhosts",
        "tags": ["all", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getVhosts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vhost"
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/vhosts/favourite": {
      "delete": {
        "operationId": "deleteOrganisationsIdApplicationsAppIdVhostsFavourite",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "unmarkFavouriteVhost"
          }
        }
      },
      "get": {
        "operationId": "getOrganisationsIdApplicationsAppIdVhostsFavourite",
        "tags": ["all", "applications", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getFavouriteVhost",
            "schema": {
              "$ref": "#/definitions/Vhost"
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdApplicationsAppIdVhostsFavourite",
        "tags": ["all", "applications", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Vhost"
          }
        }],
        "responses": {
          "200": {
            "description": "markFavouriteVhost"
          }
        }
      }
    },
    "/organisations/{id}/applications/{appId}/vhosts/{domain}": {
      "delete": {
        "operationId": "deleteOrganisationsIdApplicationsAppIdVhostsDomain",
        "tags": ["all", "applications", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "domain",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "removeVhost"
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdApplicationsAppIdVhostsDomain",
        "tags": ["all", "applications", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "domain",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Vhost"
          }
        }],
        "responses": {
          "200": {
            "description": "addVhost"
          }
        }
      }
    },
    "/organisations/{id}/avatar": {
      "put": {
        "operationId": "putOrganisationsIdAvatar",
        "tags": ["all", "organisations"],
        "description": "If you want to upload an image from your computer, send the image in the body of the request without anything else.",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "setOrgaAvatar\nsetOrgaAvatarFromSource"
          }
        }
      }
    },
    "/organisations/{id}/consumers": {
      "get": {
        "operationId": "getOrganisationsIdConsumers",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getConsumers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Consumer"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisationsIdConsumers",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeConsumer"
          }
        }],
        "responses": {
          "200": {
            "description": "createConsumer"
          }
        }
      }
    },
    "/organisations/{id}/consumers/{key}": {
      "delete": {
        "operationId": "deleteOrganisationsIdConsumersKey",
        "tags": ["all", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteConsumer"
          }
        }
      },
      "get": {
        "operationId": "getOrganisationsIdConsumersKey",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getConsumer",
            "schema": {
              "$ref": "#/definitions/Consumer"
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdConsumersKey",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeConsumer"
          }
        }],
        "responses": {
          "200": {
            "description": "PUT the same data as in POST."
          }
        }
      }
    },
    "/organisations/{id}/consumers/{key}/secret": {
      "get": {
        "operationId": "getOrganisationsIdConsumersKeySecret",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getConsumerSecret",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        }
      }
    },
    "/organisations/{id}/consumptions": {
      "get": {
        "operationId": "getOrganisationsIdConsumptions",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "to",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAmount",
            "schema": {
              "$ref": "#/definitions/Conso"
            }
          }
        }
      }
    },
    "/organisations/{id}/credits": {
      "get": {
        "operationId": "getOrganisationsIdCredits",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAmount",
            "schema": {
              "$ref": "#/definitions/Credits"
            }
          }
        }
      }
    },
    "/organisations/{id}/instances": {
      "get": {
        "operationId": "getOrganisationsIdInstances",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getInstancesForAllApps",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/AppInstance"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}/members": {
      "get": {
        "operationId": "getOrganisationsIdMembers",
        "tags": ["all", "organisations"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getOrganisationMembers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Member"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisationsIdMembers",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "invitationKey",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeMember"
          }
        }],
        "responses": {
          "200": {
            "description": "addOrganisationMember"
          }
        }
      }
    },
    "/organisations/{id}/members/{userId}": {
      "delete": {
        "operationId": "deleteOrganisationsIdMembersUserId",
        "tags": ["all", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "userId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "removeOrganisationMember"
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdMembersUserId",
        "tags": ["all", "organisations"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "userId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeMember"
          }
        }],
        "responses": {
          "200": {
            "description": "editOrganisationMember"
          }
        }
      }
    },
    "/organisations/{id}/payment-info": {
      "get": {
        "operationId": "getOrganisationsIdPaymentInfo",
        "tags": ["all", "organisations"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getPaymentInfo"
          }
        }
      }
    },
    "/organisations/{id}/payments/billings": {
      "get": {
        "operationId": "getOrganisationsIdPaymentsBillings",
        "tags": ["all", "organisations", "payments"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getInvoices"
          }
        }
      },
      "post": {
        "operationId": "postOrganisationsIdPaymentsBillings",
        "tags": ["all", "organisations", "payments"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "buyDrops"
          }
        }
      }
    },
    "/organisations/{id}/payments/billings/unpaid": {
      "get": {
        "responses": {
          "default": {
            "description": "getUnpaidInvoices"
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "organisations", "payments"]
      }
    },
    "/organisations/{id}/payments/billings/{bid}": {
      "delete": {
        "operationId": "deleteOrganisationsIdPaymentsBillingsBid",
        "tags": ["all", "organisations", "payments"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "bid",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deletePurchaseOrder"
          }
        }
      },
      "get": {
        "operationId": "getOrganisationsIdPaymentsBillingsBid",
        "tags": ["all", "organisations", "payments"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "bid",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getInvoice"
          }
        }
      },
      "put": {
        "operationId": "putOrganisationsIdPaymentsBillingsBid",
        "tags": ["all", "organisations", "payments"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "bid",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "choosePaymentProvider"
          }
        }
      }
    },
    "/organisations/{id}/payments/billings/{bid}.pdf": {
      "get": {
        "operationId": "getOrganisationsIdPaymentsBillingsBidPdf",
        "tags": ["all", "organisations", "payments"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "bid",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "token",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getPdfInvoice"
          }
        }
      }
    },
    "/organisations/{id}/payments/fullprice/{price}": {
      "get": {
        "operationId": "getOrganisationsIdPaymentsFullPricePrice",
        "tags": ["all", "organisations", "payments"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "price",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "priceWithTax"
          }
        }
      }
    },
    "/organisations/{id}/payments/methods": {
      "get": {
        "responses": {
          "default": {
            "description": "Get the payments methods for the {id} organisation."
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "organisations", "payments"]
      },
      "post": {
        "responses": {
          "default": {
            "description": "Add a payment method to {id} organisation."
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "tags": ["all", "organisations", "payments"]
      }
    },
    "/organisations/{id}/payments/methods/default": {
      "get": {
        "responses": {
          "default": {
            "description": "Get the default payment method for {id} organisation."
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "organisations", "payments"]
      },
      "put": {
        "responses": {
          "default": {
            "description": "Set the default payment method for {id} organisation."
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/PaymentData"
          }
        }],
        "tags": ["all", "organisations", "payments"]
      }
    },
    "/organisations/{id}/payments/methods/{mId}": {
      "delete": {
        "responses": {
          "default": {
            "description": "deletePaymentMethod"
          }
        },
        "parameters": [{
          "name": "mId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "organisations", "payments"]
      }
    },
    "/organisations/{id}/payments/monthlyinvoice": {
      "get": {
        "responses": {
          "default": {
            "description": "getMonthlyInvoice"
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "organisations", "payments"]
      }
    },
    "/organisations/{id}/payments/monthlyinvoice/maxcredit": {
      "put": {
        "responses": {
          "default": {
            "description": "setMaxCreditsPerMonth"
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "organisations", "payments"]
      }
    },
    "/organisations/{id}/payments/recurring": {
      "delete": {
        "operationId": "deleteOrganisationsIdPaymentsRecurring",
        "tags": ["all", "organisations", "payments"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteRecurrentPayment"
          }
        }
      },
      "get": {
        "responses": {
          "default": {
            "description": "getRecurrentPayment"
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "organisations", "payments"]
      }
    },
    "/organisations/{id}/payments/tokens/bt": {
      "get": {
        "responses": {
          "default": {
            "description": "getBraintreeToken"
          }
        },
        "parameters": [{
          "name": "id",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "organisations", "payments"]
      }
    },
    "/password_forgotten": {
      "get": {
        "operationId": "getPasswordForgotten",
        "tags": ["all", "password_forgotten"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getPasswordForgottenForm"
          }
        }
      },
      "post": {
        "operationId": "postPasswordForgotten",
        "tags": ["all", "password_forgotten"],
        "parameters": [{
          "name": "login",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "drop_tokens",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "TesterPass",
          "in": "header",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "askForPasswordResetViaForm"
          }
        }
      }
    },
    "/password_forgotten/{key}": {
      "get": {
        "operationId": "getPasswordForgottenKey",
        "tags": ["all", "password_forgotten"],
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "confirmPasswordResetRequest"
          }
        }
      },
      "post": {
        "operationId": "postPasswordForgottenKey",
        "tags": ["all", "password_forgotten"],
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "pass",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "pass2",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "resetPasswordForgotten"
          }
        }
      }
    },
    "/payments/coupons/{name}": {
      "get": {
        "operationId": "getPaymentsCouponsName",
        "tags": ["all", "payments"],
        "parameters": [{
          "name": "name",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getCoupon"
          }
        }
      }
    },
    "/payments/providers": {
      "get": {
        "operationId": "getPaymentsProviders",
        "tags": ["all", "payments"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getAvailablePaymentProviders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Payment Provider"
              }
            }
          }
        }
      }
    },
    "/payments/tokens/bt": {
      "get": {
        "operationId": "getPaymentsTokensBt",
        "tags": ["all", "payments"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getBraintreeToken"
          }
        }
      }
    },
    "/payments/webhooks/bt": {
      "get": {
        "operationId": "getPaymentsWebhooksBt",
        "tags": ["all", "payments"],
        "parameters": [{
          "name": "bt_challenge",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "subscriptionEventPing"
          }
        }
      }
    },
    "/payments/{bid}/end/bt": {
      "post": {
        "operationId": "postPaymentsBidEndBt",
        "tags": ["all", "payments"],
        "parameters": [{
          "name": "bid",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "endPaymentWithBraintree"
          }
        }
      }
    },
    "/products/addonproviders": {
      "get": {
        "operationId": "getProductsAddonProviders",
        "tags": ["all", "products"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getAddonProviders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Provider"
              }
            }
          }
        }
      }
    },
    "/products/addonproviders/{provider_id}": {
      "get": {
        "operationId": "getProductsAddonProvidersProviderId",
        "tags": ["all", "products"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "provider_id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddonProvider",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        }
      }
    },
    "/products/countries": {
      "get": {
        "operationId": "getProductsCountries",
        "tags": ["all", "products"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getCountries",
            "schema": {
              "$ref": "#/definitions/Country"
            }
          }
        }
      }
    },
    "/products/countrycodes": {
      "get": {
        "operationId": "getProductsCountrycodes",
        "tags": ["all", "products"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getCountryCodes",
            "schema": {
              "$ref": "#/definitions/Country"
            }
          }
        }
      }
    },
    "/products/instances": {
      "get": {
        "operationId": "getProductsInstances",
        "tags": ["all", "products"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "for",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAvailableInstances",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Instance"
              }
            }
          }
        }
      }
    },
    "/products/instances/{type: [^-]+}-{version}": {
      "get": {
        "operationId": "getProductsInstancesTypeVersion",
        "tags": ["all", "products"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "type",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "version",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "for",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "app",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAvailableInstance",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          }
        }
      }
    },
    "/products/mfa_kinds": {
      "get": {
        "responses": {
          "default": {
            "description": "getMFAKinds"
          }
        },
        "tags": ["all", "products"]
      }
    },
    "/products/packages": {
      "get": {
        "operationId": "getProductsPackages",
        "tags": ["all", "products"],
        "parameters": [{
          "name": "coupon",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "orgaId",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "currency",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAvailablePackages"
          }
        }
      }
    },
    "/products/prices": {
      "get": {
        "operationId": "getProductsPrices",
        "tags": ["all", "products"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getExchangeRates"
          }
        }
      }
    },
    "/products/zones": {
      "get": {
        "operationId": "getProductsZones",
        "tags": ["all", "products"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getZones",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Zone"
              }
            }
          }
        }
      }
    },
    "/self": {
      "delete": {
        "operationId": "deleteSelf",
        "tags": ["all", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "deleteUser"
          }
        }
      },
      "get": {
        "operationId": "getSelf",
        "tags": ["all", "self"],
        "summary": "",
        "description": "Get information about yourself",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getUser",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "operationId": "putSelf",
        "tags": ["all", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeUser"
          }
        }],
        "responses": {
          "200": {
            "description": "editUser"
          }
        }
      }
    },
    "/self/addons": {
      "get": {
        "operationId": "getSelfAddons",
        "tags": ["all", "addons", "self"],
        "summary": "Addon",
        "description": "Get all the addons",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getAddons",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Addon"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postSelfAddons",
        "tags": ["all", "addons", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeAddon"
          }
        }],
        "responses": {
          "200": {
            "description": "provisionAddon"
          }
        }
      }
    },
    "/self/addons/preorders": {
      "post": {
        "responses": {
          "default": {
            "description": "preorderAddon"
          }
        },
        "parameters": [{
          "in": "body",
          "name": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/WannabeAddon"
          }
        }],
        "tags": ["all", "addons", "self"]
      }
    },
    "/self/addons/{addonId}": {
      "delete": {
        "operationId": "deleteSelfAddonsAddonId",
        "tags": ["all", "addons", "self"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deprovisionAddon"
          }
        }
      },
      "get": {
        "operationId": "getSelfAddonsAddonId",
        "tags": ["all", "addons", "self"],
        "summary": "Specific addon",
        "description": "Get a specific addon",
        "produces": ["application/json"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddon",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          }
        }
      },
      "put": {
        "operationId": "putSelfAddonsAddonId",
        "tags": ["all", "addons", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeAddon"
          }
        }],
        "responses": {
          "200": {
            "description": "Update addon informations"
          }
        }
      }
    },
    "/self/addons/{addonId}/applications": {
      "get": {
        "operationId": "getSelfAddonsAddonIdApplications",
        "tags": ["all", "addons", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationsLinkedToAddon",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/env": {
      "get": {
        "operationId": "getSelfAddonsAddonIdEnv",
        "tags": ["all", "addons", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddonEnv",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListEnv"
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/plan": {
      "put": {
        "operationId": "putSelfAddonsAddonIdPlan",
        "tags": ["all", "addons", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabePlan"
          }
        }],
        "responses": {
          "200": {
            "description": "Update plan of an add-on."
          }
        }
      }
    },
    "/self/addons/{addonId}/sso": {
      "get": {
        "operationId": "getSelfAddonsAddonIdSso",
        "tags": ["all", "addons", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getSSOData",
            "schema": {
              "$ref": "#/definitions/Sso"
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/tags": {
      "get": {
        "operationId": "getSelfAddonsAddonIdTags",
        "tags": ["all", "addons", "self"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddonTags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/self/addons/{addonId}/tags/{tag}": {
      "delete": {
        "operationId": "deleteSelfAddonsAddonIdTagsTag",
        "tags": ["all", "addons", "self"],
        "parameters": [{
          "name": "tag",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteAddonTag"
          }
        }
      },
      "put": {
        "operationId": "putSelfAddonsAddonIdTagsTag",
        "tags": ["all", "addons", "self"],
        "parameters": [{
          "name": "tag",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "responses": {
          "200": {
            "description": "addAddonTag"
          }
        }
      }
    },
    "/self/applications": {
      "get": {
        "operationId": "getSelfApplications",
        "tags": ["all", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getApplications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates an application. If you want to create a Github app, you need to replace the oauthApp field with what you will find here: https://github.com/CleverCloud/doc.clever-cloud.com/issues/179",
        "operationId": "postSelfApplications",
        "tags": ["all", "applications", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeApplication"
          }
        }],
        "responses": {
          "200": {
            "description": "addApplication"
          }
        }
      }
    },
    "/self/applications/{appId}": {
      "delete": {
        "operationId": "deleteSelfApplicationsAppId",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteApplication"
          }
        }
      },
      "get": {
        "operationId": "getSelfApplicationsAppId",
        "tags": ["all", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplication",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        }
      },
      "put": {
        "operationId": "putSelfApplicationsAppId",
        "tags": ["all", "applications", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeApplication"
          }
        }],
        "responses": {
          "200": {
            "description": "editApplication"
          }
        }
      }
    },
    "/self/applications/{appId}/addons": {
      "get": {
        "operationId": "getSelfApplicationsAppIdAddons",
        "tags": ["all", "addons", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getAddonsLinkedToApplication",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Addon"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postSelfApplicationsAppIdAddons",
        "tags": ["all", "addons", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "responses": {
          "200": {
            "description": "linkAddonToApplication"
          }
        }
      }
    },
    "/self/applications/{appId}/addons/env": {
      "get": {
        "operationId": "getSelfApplicationsAppIdAddonsEnv",
        "tags": ["all", "addons", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getEnvOfAddonsLinkedToApplication",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Env"
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/addons/{addonId}": {
      "delete": {
        "operationId": "deleteSelfApplicationsAppIdAddonsAddonId",
        "tags": ["all", "addons", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "unlinkAddonFromApplication"
          }
        }
      }
    },
    "/self/applications/{appId}/branch": {
      "put": {
        "responses": {
          "default": {
            "description": "setApplicationBranch"
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "self"]
      }
    },
    "/self/applications/{appId}/branches": {
      "get": {
        "responses": {
          "default": {
            "description": "getApplicationBranches"
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "self"]
      }
    },
    "/self/applications/{appId}/dependencies": {
      "get": {
        "operationId": "getSelfApplicationsAppIdDependencies",
        "tags": ["all", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationDependencies",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/dependencies/env": {
      "get": {
        "responses": {
          "200": {
            "description": "Get env variables defined by application dependencies",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedAppEnv"
              }
            }
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "self"]
      }
    },
    "/self/applications/{appId}/dependencies/{dependencyId}": {
      "delete": {
        "operationId": "deleteSelfApplicationsAppIdDependenciesDependencyId",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "dependencyId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteApplicationDependency"
          }
        }
      },
      "put": {
        "operationId": "getSelfApplicationsAppIdDependenciesDependencyId",
        "tags": ["all", "applications", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "dependencyId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeApplication"
          }
        }],
        "responses": {
          "200": {
            "description": "addApplicationDependency"
          }
        }
      }
    },
    "/self/applications/{appId}/dependents": {
      "get": {
        "operationId": "getSelfApplicationsAppIdDependents",
        "tags": ["all", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationDependents",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/deployments": {
      "get": {
        "operationId": "getSelfApplicationsAppIdDeployments",
        "tags": ["all", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "offset",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "action",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationDeployments",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deployment"
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/deployments/{deploymentId}/instances": {
      "delete": {
        "operationId": "deleteSelfApplicationsAppIdDeploymentsDeploymentIdInstances",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "deploymentId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "cancelDeploy"
          }
        }
      }
    },
    "/self/applications/{appId}/env": {
      "get": {
        "operationId": "getSelfApplicationsAppIdEnv",
        "tags": ["all", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "editApplicationEnv",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListEnv"
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putSelfApplicationsAppIdEnv",
        "tags": ["all", "applications", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeEnv"
          }
        }],
        "responses": {
          "200": {
            "description": "editApplicationEnvironment"
          }
        }
      }
    },
    "/self/applications/{appId}/env/{envName}": {
      "delete": {
        "operationId": "deleteSelfApplicationsAppIdEnvEnvName",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "envName",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "removeApplicationEnv"
          }
        }
      },
      "put": {
        "operationId": "putSelfApplicationsAppIdEnvEnvName",
        "tags": ["all", "applications", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "envName",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeEnv"
          }
        }],
        "responses": {
          "200": {
            "description": "editApplicationEnv"
          }
        }
      }
    },
    "/self/applications/{appId}/exposed_env": {
      "get": {
        "responses": {
          "default": {
            "description": "getExposedEnv"
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "self"]
      },
      "put": {
        "responses": {
          "default": {
            "description": "updateExposedEnv"
          }
        },
        "parameters": [{
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "self"]
      }
    },
    "/self/applications/{appId}/instances": {
      "delete": {
        "operationId": "deleteSelfApplicationsAppIdInstances",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "undeployApplication"
          }
        }
      },
      "get": {
        "operationId": "getSelfApplicationsAppIdInstances",
        "tags": ["all", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationInstances",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Instance"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postSelfApplicationsAppIdInstances",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "commit",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "redeployApplication"
          }
        }
      }
    },
    "/self/applications/{appId}/instances/{instanceId}": {
      "get": {
        "responses": {
          "default": {
            "description": "getApplicationInstance",
            "schema": {
              "$ref": "#/definitions/AppInstance"
            }
          }
        },
        "parameters": [{
          "name": "instanceId",
          "required": true,
          "in": "path",
          "type": "string"
        }, {
          "name": "appId",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "applications", "self"]
      }
    },
    "/self/applications/{appId}/tags": {
      "get": {
        "operationId": "getSelfApplicationsAppIdTags",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationTags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/tags/{tag}": {
      "delete": {
        "operationId": "deleteSelfApplicationsAppIdTagsTag",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "tag",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteApplicationTag"
          }
        }
      },
      "put": {
        "operationId": "putSelfApplicationsAppIdTagsTag",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "tag",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "responses": {
          "200": {
            "description": "addApplicationTag"
          }
        }
      }
    },
    "/self/applications/{appId}/vhosts": {
      "get": {
        "operationId": "getSelfApplicationsAppIdVhosts",
        "tags": ["all", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getVhosts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vhost"
              }
            }
          }
        }
      }
    },
    "/self/applications/{appId}/vhosts/favourite": {
      "delete": {
        "operationId": "deleteSelfApplicationsAppIdVhostsFavourite",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "unmarkFavouriteVhost"
          }
        }
      },
      "get": {
        "operationId": "getSelfApplicationsAppIdVhostsFavourite",
        "tags": ["all", "applications", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getFavouriteVhost",
            "schema": {
              "$ref": "#/definitions/Vhost"
            }
          }
        }
      },
      "put": {
        "operationId": "putSelfApplicationsAppIdVhostsFavourite",
        "tags": ["all", "applications", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Vhost"
          }
        }],
        "responses": {
          "200": {
            "description": "markFavouriteVhost"
          }
        }
      }
    },
    "/self/applications/{appId}/vhosts/{domain}": {
      "delete": {
        "operationId": "deleteSelfApplicationsAppIdVhostsDomain",
        "tags": ["all", "applications", "self"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "domain",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "removeVhost"
          }
        }
      },
      "put": {
        "operationId": "putSelfApplicationsAppIdVhostsDomain",
        "tags": ["all", "applications", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "domain",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Vhost"
          }
        }],
        "responses": {
          "200": {
            "description": "addVhost"
          }
        }
      }
    },
    "/self/avatar": {
      "put": {
        "operationId": "putSelfAvatar",
        "tags": ["all", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Avatar"
          }
        }],
        "responses": {
          "200": {
            "description": "setUserAvatar\nsetUserAvatarFromSource"
          }
        }
      }
    },
    "/self/change_password": {
      "put": {
        "operationId": "putSelfChangePassword",
        "tags": ["all", "self"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "changeUserPassword",
            "schema": {
              "$ref": "#/definitions/Change Password"
            }
          }
        }
      }
    },
    "/self/confirmation_email": {
      "get": {
        "operationId": "getSelfConfirmationEmail",
        "tags": ["all", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getConfirmationEmail"
          }
        }
      }
    },
    "/self/consumers": {
      "get": {
        "operationId": "getSelfConsumers",
        "tags": ["all", "self"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getConsumers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Consumer"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postSelfConsumers",
        "tags": ["all", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeConsumer"
          }
        }],
        "responses": {
          "200": {
            "description": "createConsumer"
          }
        }
      }
    },
    "/self/consumers/{key}": {
      "delete": {
        "operationId": "deleteSelfConsumersKey",
        "tags": ["all", "self"],
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteConsumer"
          }
        }
      },
      "get": {
        "operationId": "getSelfConsumersKey",
        "tags": ["all", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getConsumer",
            "schema": {
              "$ref": "#/definitions/Consumer"
            }
          }
        }
      },
      "put": {
        "operationId": "putSelfConsumersKey",
        "tags": ["all", "self"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeConsumer"
          }
        }],
        "responses": {
          "200": {
            "description": "PUT same consumer data as in POST."
          }
        }
      }
    },
    "/self/consumers/{key}/secret": {
      "get": {
        "operationId": "getSelfConsumersKeySecret",
        "tags": ["all", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getConsumerSecret",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        }
      }
    },
    "/self/consumptions": {
      "get": {
        "operationId": "getSelfConsumptions",
        "tags": ["all", "self"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "appId",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "from",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "to",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getConsumptions",
            "schema": {
              "$ref": "#/definitions/Conso"
            }
          }
        }
      }
    },
    "/self/credits": {
      "get": {
        "operationId": "getSelfCredits",
        "tags": ["all", "self"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getAmount",
            "schema": {
              "$ref": "#/definitions/Credits"
            }
          }
        }
      }
    },
    "/self/emails": {
      "get": {
        "operationId": "getSelfEmails",
        "tags": ["all", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getEmailAddresses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/self/emails/{email}": {
      "delete": {
        "operationId": "deleteSelfEmailsEmail",
        "tags": ["all", "self"],
        "parameters": [{
          "name": "email",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "removeEmailAddress"
          }
        }
      },
      "put": {
        "operationId": "putSelfEmailsEmail",
        "tags": ["all", "self"],
        "parameters": [{
          "name": "email",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "responses": {
          "200": {
            "description": "addEmailAddress"
          }
        }
      }
    },
    "/self/id": {
      "get": {
        "operationId": "getSelfId",
        "tags": ["all", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getId",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/self/instances": {
      "get": {
        "operationId": "getSelfInstances",
        "tags": ["all", "self"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getInstancesForAllApps",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Instance"
              }
            }
          }
        }
      }
    },
    "/self/keys": {
      "get": {
        "operationId": "getSelfKeys",
        "tags": ["all", "self"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getSshKeys",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Key"
              }
            }
          }
        }
      }
    },
    "/self/keys/{key}": {
      "delete": {
        "operationId": "deleteSelfKeysKey",
        "tags": ["all", "self"],
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "removeSshKey"
          }
        }
      },
      "put": {
        "operationId": "putSelfKeysKey",
        "tags": ["all", "self"],
        "parameters": [{
          "name": "key",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Body"
          }
        }],
        "responses": {
          "200": {
            "description": "addSshKey"
          }
        }
      }
    },
    "/self/mfa/{kind}": {
      "delete": {
        "responses": {
          "default": {
            "description": "deleteMFA"
          }
        },
        "parameters": [{
          "name": "kind",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "self"]
      },
      "post": {
        "responses": {
          "default": {
            "description": "createMFA"
          }
        },
        "parameters": [{
          "name": "kind",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "self"]
      },
      "put": {
        "responses": {
          "default": {
            "description": "favMFA"
          }
        },
        "parameters": [{
          "name": "kind",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "self"]
      }
    },
    "/self/mfa/{kind}/backupcodes": {
      "get": {
        "responses": {
          "default": {
            "description": "getBackupCodes"
          }
        },
        "parameters": [{
          "name": "kind",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "self"]
      }
    },
    "/self/mfa/{kind}/confirmation": {
      "post": {
        "responses": {
          "default": {
            "description": "validateMFA"
          }
        },
        "parameters": [{
          "name": "kind",
          "required": true,
          "in": "path",
          "type": "string"
        }],
        "tags": ["all", "self"]
      }
    },
    "/self/payment-info": {
      "get": {
        "operationId": "getSelfPaymentInfo",
        "tags": ["all", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getPaymentInfo"
          }
        }
      }
    },
    "/self/payments/billings": {
      "get": {
        "operationId": "getSelfPaymentsBillings",
        "tags": ["all", "payments", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getInvoices"
          }
        }
      },
      "post": {
        "operationId": "postSelfPaymentsBillings",
        "tags": ["all", "payments", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "buyDrops"
          }
        }
      }
    },
    "/self/payments/billings/{bid}": {
      "delete": {
        "operationId": "deleteSelfPaymentsBillingsBid",
        "tags": ["all", "payments", "self"],
        "parameters": [{
          "name": "bid",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deletePurchaseOrder"
          }
        }
      },
      "get": {
        "operationId": "getSelfPaymentsBillingsBid",
        "tags": ["all", "payments", "self"],
        "parameters": [{
          "name": "bid",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getInvoice"
          }
        }
      },
      "put": {
        "operationId": "putSelfPaymentsBillingsBid",
        "tags": ["all", "payments", "self"],
        "parameters": [{
          "name": "bid",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "choosePaymentProvider"
          }
        }
      }
    },
    "/self/payments/billings/{bid}.pdf": {
      "get": {
        "operationId": "getSelfPaymentsBillingsBidPdf",
        "tags": ["all", "payments", "self"],
        "parameters": [{
          "name": "bid",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "token",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getPdfInvoice"
          }
        }
      }
    },
    "/self/payments/fullprice/{price}": {
      "get": {
        "operationId": "getSelfPaymentsFullpricePrice",
        "tags": ["all", "payments", "self"],
        "parameters": [{
          "name": "price",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "priceWithTax"
          }
        }
      }
    },
    "/self/payments/methods": {
      "get": {
        "operationId": "getSelfPaymentsMethods",
        "tags": ["all", "payments", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getUserPaymentMethods"
          }
        }
      },
      "post": {
        "operationId": "postSelfPaymentsMethods",
        "tags": ["all", "payments", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "addUserMethod"
          }
        }
      }
    },
    "/self/payments/methods/default": {
      "get": {
        "responses": {
          "default": {
            "description": "getDefaultMethod"
          }
        },
        "tags": ["all", "payments", "self"]
      },
      "put": {
        "responses": {
          "default": {
            "description": "setDefaultMethod"
          }
        },
        "tags": ["all", "payments", "self"]
      }
    },
    "/self/payments/methods/{mId}": {
      "delete": {
        "operationId": "deleteSelfPaymentsMethodsMId",
        "tags": ["all", "payments", "self"],
        "parameters": [{
          "name": "mId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "deleteUserCard"
          }
        }
      }
    },
    "/self/payments/monthlyinvoice": {
      "get": {
        "responses": {
          "default": {
            "description": "getMonthlyInvoice"
          }
        },
        "tags": ["all", "payments", "self"]
      }
    },
    "/self/payments/monthlyinvoice/maxcredit": {
      "put": {
        "responses": {
          "default": {
            "description": "setMaxCreditsPerMonth"
          }
        },
        "tags": ["all", "payments", "self"]
      }
    },
    "/self/payments/recurring": {
      "delete": {
        "operationId": "deleteSelfPaymentsRecurring",
        "tags": ["all", "payments", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "deleteRecurrentPayment"
          }
        }
      },
      "get": {
        "responses": {
          "default": {
            "description": "getRecurrentPayment"
          }
        },
        "tags": ["all", "payments", "self"]
      }
    },
    "/self/payments/tokens/bt": {
      "get": {
        "responses": {
          "default": {
            "description": "getBraintreeToken"
          }
        },
        "tags": ["all", "payments", "self"]
      }
    },
    "/self/tokens": {
      "delete": {
        "operationId": "deleteSelfTokens",
        "tags": ["all", "self"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "revokeAllTokens"
          }
        }
      },
      "get": {
        "operationId": "getSelfTokens",
        "tags": ["all", "self"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getSelfTokens",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Token"
              }
            }
          }
        }
      }
    },
    "/self/tokens/{token}": {
      "delete": {
        "operationId": "deleteSelfTokensToken",
        "tags": ["all", "self"],
        "parameters": [{
          "name": "token",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "revokeToken"
          }
        }
      }
    },
    "/self/validate_email": {
      "get": {
        "operationId": "getSelfValidateEmail",
        "tags": ["all", "self"],
        "parameters": [{
          "name": "validationKey",
          "in": "query",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "validateEmail"
          }
        }
      }
    },
    "/summary": {
      "get": {
        "operationId": "getSummary",
        "tags": ["all"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "getSummary",
            "schema": {
              "$ref": "#/definitions/Summary"
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "operationId": "postUsers",
        "tags": ["all", "users"],
        "consumes": ["application/json"],
        "parameters": [{
          "name": "invitationKey",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "addonBetaInvitationKey",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "email",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "pass",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "url_next",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "name": "terms",
          "in": "query",
          "required": false,
          "type": "string"
        }, {
          "in": "body",
          "name": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/WannabeUser"
          }
        }],
        "responses": {
          "200": {
            "description": "createUser\ncreateUserFromForm"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUsersId",
        "tags": ["all", "users"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getUser",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{id}/applications": {
      "get": {
        "operationId": "getUsersIdApplications",
        "tags": ["all", "applications", "users"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      }
    },
    "/users/{userId}/git-info": {
      "get": {
        "operationId": "getUsersUserIdGitInfo",
        "tags": ["all", "users"],
        "parameters": [{
          "name": "userId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getGitInfo"
          }
        }
      }
    },
    "/vendor/apps": {
      "get": {
        "operationId": "getVendorApps",
        "tags": ["all", "vendor"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "offset",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32"
        }],
        "responses": {
          "200": {
            "description": "listApps",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          }
        }
      }
    },
    "/vendor/apps/{addonId}": {
      "get": {
        "operationId": "getVendorAppsAddonId",
        "tags": ["all", "vendor"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "getApplicationInfo"
          }
        }
      },
      "put": {
        "operationId": "putVendorAppsAddonId",
        "tags": ["all", "vendor"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "editApplicationConfiguration"
          }
        }
      }
    },
    "/vendor/apps/{addonId}/consumptions": {
      "post": {
        "operationId": "postVendorBillingOwnerId",
        "tags": ["all", "vendor"],
        "parameters": [{
          "name": "addonId",
          "in": "path",
          "required": true,
          "type": "string"
        }, {
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/WannabeAddonBilling"
          }
        }],
        "responses": {
          "default": {
            "description": "noContent"
          }
        }
      }
    }
  },
  "definitions": {
    "Addon": {
      "type": "object",
      "required": ["configKeys", "creationDate", "id", "name", "plan", "provider", "realId", "region"],
      "properties": {
        "configKeys": {
          "type": "array",
          "description": "Environments variables link to the addon.",
          "items": {
            "type": "string"
          }
        },
        "creationDate": {
          "type": "string",
          "format": "date",
          "description": "The creation timestamp of the addon"
        },
        "id": {
          "type": "string",
          "description": "`addon_${uuid}`"
        },
        "name": {
          "type": "string"
        },
        "plan": {
          "$ref": "#/definitions/Plan"
        },
        "provider": {
          "$ref": "#/definitions/Provider"
        },
        "realId": {
          "type": "string",
          "description": "`${provider}_${uuid2}`"
        },
        "region": {
          "type": "string"
        }
      },
      "description": "An addon"
    },
    "AddonProviderSso": {
      "type": "object",
      "required": ["macaroon", "url"],
      "properties": {
        "macaroon": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "AppInstance": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "appPort": {
          "type": "integer",
          "format": "int32"
        },
        "commit": {
          "type": "string"
        },
        "deployNumber": {
          "type": "integer",
          "format": "int32"
        },
        "flavor": {
          "$ref": "#/definitions/Flavor"
        },
        "id": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "Application": {
      "type": "object",
      "required": ["archived", "branch", "buildFlavor", "cancelOnPush", "commitId", "creationDate", "deployUrl", "deployment", "description", "favourite", "homogeneous", "id", "instance", "last_deploy", "name", "ownerId", "separateBuild", "state", "stickySessions", "vhosts", "webhookSecret", "webhookUrl", "zone"],
      "properties": {
        "archived": {
          "type": "boolean",
          "default": false
        },
        "branch": {
          "type": "string"
        },
        "buildFlavor": {
          "$ref": "#/definitions/Flavor"
        },
        "cancelOnPush": {
          "type": "boolean",
          "default": false
        },
        "commitId": {
          "type": "string"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64"
        },
        "deployUrl": {
          "type": "string"
        },
        "deployment": {
          "$ref": "#/definitions/Deployment"
        },
        "description": {
          "type": "string"
        },
        "favourite": {
          "type": "boolean",
          "default": false
        },
        "homogeneous": {
          "type": "boolean",
          "default": false
        },
        "id": {
          "type": "string"
        },
        "instance": {
          "$ref": "#/definitions/Instance"
        },
        "last_deploy": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "separateBuild": {
          "type": "boolean",
          "default": false
        },
        "state": {
          "type": "string"
        },
        "stickySessions": {
          "type": "boolean",
          "default": false
        },
        "vhosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vhost"
          }
        },
        "webhookSecret": {
          "type": "string"
        },
        "webhookUrl": {
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "`par` ou `mtl`"
        }
      }
    },
    "Avatar": {
      "type": "object",
      "required": ["source"],
      "properties": {
        "source": {
          "type": "object",
          "description": "",
          "properties": {
            "source": {
              "type": "string",
              "description": "github or gravatar"
            },
            "value": {
              "$ref": "#/definitions/URL"
            }
          },
          "required": ["source", "value"]
        }
      },
      "description": "If you want to upload an image from your computer, send the image in the body of the request without anything else."
    },
    "Body": {
      "type": "object",
      "required": ["body"],
      "properties": {
        "body": {
          "type": "string"
        }
      }
    },
    "Change Password": {
      "type": "object",
      "required": ["newPassword", "oldPassword"],
      "properties": {
        "newPassword": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        }
      }
    },
    "Conso": {
      "type": "object",
      "required": ["appId", "conso"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "conso": {
          "type": "object",
          "properties": {
            "conso": {
              "type": "string",
              "description": "One day consumption"
            },
            "date": {
              "type": "string"
            }
          },
          "required": ["conso", "date"]
        }
      }
    },
    "Consumer": {
      "type": "object",
      "required": ["baseUrl", "description", "name", "rights", "url"],
      "properties": {
        "baseUrl": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "rights": {
          "$ref": "#/definitions/ConsumerRights"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ConsumerRights": {
      "type": "object",
      "properties": {
        "access_bills": {
          "type": "boolean",
          "default": false
        },
        "access_consumption_statistics": {
          "type": "boolean",
          "default": false
        },
        "access_credit_count": {
          "type": "boolean",
          "default": false
        },
        "access_organisations": {
          "type": "boolean",
          "default": false
        },
        "access_organisations_bills": {
          "type": "boolean",
          "default": false
        },
        "access_organisations_consumption_statistics": {
          "type": "boolean",
          "default": false
        },
        "access_organisations_credit_count": {
          "type": "boolean",
          "default": false
        },
        "access_personal_information": {
          "type": "boolean",
          "default": false
        },
        "almighty": {
          "type": "boolean",
          "default": false
        },
        "manage_applications": {
          "type": "boolean",
          "default": false
        },
        "manage_organisations": {
          "type": "boolean",
          "default": false
        },
        "manage_organisations_applications": {
          "type": "boolean",
          "default": false
        },
        "manage_organisations_members": {
          "type": "boolean",
          "default": false
        },
        "manage_organisations_services": {
          "type": "boolean",
          "default": false
        },
        "manage_personal_information": {
          "type": "boolean",
          "default": false
        },
        "manage_services": {
          "type": "boolean",
          "default": false
        },
        "manage_ssh_keys": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Country": {
      "type": "object",
      "required": ["code", "name"],
      "properties": {
        "code": {
          "type": "string",
          "description": "Code ISO 3166"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Credits": {
      "type": "object",
      "required": ["count", "dropPrice", "ownerId"],
      "properties": {
        "count": {
          "type": "number",
          "format": "float"
        },
        "dropPrice": {
          "type": "object",
          "properties": {
            "currency": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "format": "float"
            }
          },
          "required": ["currency", "value"]
        },
        "ownerId": {
          "type": "string"
        }
      }
    },
    "Deployment": {
      "type": "object",
      "required": ["repoState", "shutdownable", "type", "url"],
      "properties": {
        "httpUrl": {
          "type": "string"
        },
        "repoState": {
          "type": "string"
        },
        "shutdownable": {
          "type": "boolean",
          "default": false
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "LinkedAppEnv": {
      "type": "object",
      "required": ["app_id", "app_name", "env"],
      "properties": {
        "app_id": {
          "type": "string"
        },
        "app_name": {
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WannabeEnv"
          }
        }
      }
    },
    "Env": {
      "type": "object",
      "required": ["addon_id", "addon_name", "env", "provider_id"],
      "properties": {
        "addon_id": {
          "type": "string"
        },
        "addon_name": {
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WannabeEnv"
          }
        },
        "provider_id": {
          "type": "string"
        }
      }
    },
    "Feature": {
      "type": "object",
      "required": ["name", "type", "value"],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the properties"
        },
        "type": {
          "type": "string",
          "description": "The type of the feature"
        },
        "value": {
          "type": "string",
          "description": "The value of the feature"
        }
      }
    },
    "Flavor": {
      "type": "object",
      "required": ["cpus", "mem", "name", "price"],
      "properties": {
        "available": {
          "type": "boolean",
          "default": false
        },
        "cpus": {
          "type": "integer",
          "format": "int32"
        },
        "disk": {
          "type": "integer",
          "format": "int32"
        },
        "mem": {
          "type": "integer",
          "format": "int32"
        },
        "microservice": {
          "type": "boolean",
          "default": false
        },
        "name": {
          "type": "string"
        },
        "nice": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Instance": {
      "type": "object",
      "required": ["defaultEnv", "flavors", "instanceAndVersion", "maxAllowedInstances", "maxFlavor", "maxInstances", "minFlavor", "minInstances", "type", "variant", "version"],
      "properties": {
        "buildFlavor": {
          "$ref": "#/definitions/Flavor"
        },
        "comingSoon": {
          "type": "boolean",
          "default": false
        },
        "defaultEnv": {
          "$ref": "#/definitions/Map"
        },
        "defaultFlavor": {
          "$ref": "#/definitions/Flavor"
        },
        "deployments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "flavors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flavor"
          }
        },
        "instanceAndVersion": {
          "type": "string"
        },
        "maxAllowedInstances": {
          "type": "integer",
          "format": "int32"
        },
        "maxFlavor": {
          "$ref": "#/definitions/Flavor"
        },
        "maxInstances": {
          "type": "integer",
          "format": "int32"
        },
        "minFlavor": {
          "$ref": "#/definitions/Flavor"
        },
        "minInstances": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "variant": {
          "$ref": "#/definitions/Variant"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "Key": {
      "type": "object",
      "required": ["fingerprint", "key", "name"],
      "properties": {
        "fingerprint": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": ""
        }
      }
    },
    "ListEnv": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Map": {
      "type": "object"
    },
    "Member": {
      "type": "object",
      "required": ["job", "member", "role"],
      "properties": {
        "job": {
          "type": "string"
        },
        "member": {
          "type": "object",
          "properties": {
            "avatar": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["email", "id"]
        },
        "role": {
          "type": "string"
        }
      }
    },
    "Organisation": {
      "type": "object",
      "required": ["VAT", "address", "avatar", "city", "company", "country", "description", "id", "name", "vatState", "zipcode"],
      "properties": {
        "VAT": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "vatState": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        }
      }
    },
    "Payment Provider": {
      "type": "object",
      "required": ["comingSoon", "imgUrl", "name", "title"],
      "properties": {
        "comingSoon": {
          "type": "boolean",
          "default": false
        },
        "imgUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "PaymentData": {
      "type": "object",
      "required": ["token", "type"],
      "properties": {
        "token": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["NEW_CARD", "EXISTING_CARD"]
        },
        "deviceData": {
          "type": "string"
        }
      }
    },
    "Plan": {
      "type": "object",
      "required": ["features", "id", "name", "price", "slug"],
      "properties": {
        "features": {
          "type": "array",
          "description": "The list of the feature in the addon",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        },
        "id": {
          "type": "string",
          "description": "`plan_${uuid}`"
        },
        "name": {
          "type": "string",
          "description": "Name of the pan"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "Provider": {
      "type": "object",
      "required": ["analyticsId", "canUpgrade", "googlePlusName", "id", "logoUrl", "longDesc", "name", "openInNewTab", "regions", "shortDesc", "status", "supportEmail", "twitterName", "website"],
      "properties": {
        "analyticsId": {
          "type": "string",
          "description": "The id of the analytics page link to this addon"
        },
        "canUpgrade": {
          "type": "boolean",
          "description": "Can the addon be upgraded",
          "default": false
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        },
        "googlePlusName": {
          "type": "string",
          "description": "The name of the google + page link to this addon (could be empty)"
        },
        "id": {
          "type": "string",
          "description": "The id of the provider"
        },
        "logoUrl": {
          "type": "string",
          "description": "The url of the addon's logo"
        },
        "longDesc": {
          "type": "string",
          "description": "A less concise description of the addon"
        },
        "name": {
          "type": "string"
        },
        "openInNewTab": {
          "type": "boolean",
          "description": "Does the addon panel need to be open in a new tab",
          "default": false
        },
        "plans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Plan"
          }
        },
        "regions": {
          "type": "array",
          "description": "The differents regions where the addon is available",
          "items": {
            "type": "string"
          }
        },
        "shortDesc": {
          "type": "string",
          "description": "A short description of the addon"
        },
        "status": {
          "type": "string",
          "description": "The status of this addon (RELEASE, BETA, ...)"
        },
        "supportEmail": {
          "type": "string",
          "description": "The mail to contact in case of issue with this addon"
        },
        "twitterName": {
          "type": "string",
          "description": "The name of the user to contact on twitter for this addon (could be empty)"
        },
        "website": {
          "type": "string",
          "description": "The website of the provider. If the addon is developped by clever-cloud, the site is \"http://www.clever-cloud.com/\""
        }
      },
      "description": "A provider"
    },
    "Rights": {
      "type": "object",
      "required": ["description", "name"],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Secret": {
      "type": "object",
      "required": ["secret", "value"],
      "properties": {
        "secret": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Sso": {
      "type": "object",
      "required": ["email", "id", "nav-data", "timestamp", "token", "url"],
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "nav-data": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date"
        },
        "token": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "Summary": {
      "type": "object",
      "required": ["organisations", "user"],
      "properties": {
        "organisations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "addons": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "logoUrl": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "providerId": {
                      "type": "string"
                    }
                  }
                }
              },
              "applications": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "archived": {
                      "type": "boolean",
                      "default": false
                    },
                    "commit": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "instanceType": {
                      "type": "string"
                    },
                    "instanceVariant": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "variantSlug": {
                      "type": "string"
                    }
                  }
                }
              },
              "avatar": {
                "type": "string"
              },
              "consumers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "picture": {
                      "type": "string"
                    }
                  }
                }
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "providers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "role": {
                "type": "string"
              }
            }
          }
        },
        "user": {
          "type": "object",
          "properties": {
            "addons": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "logoUrl": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "providerId": {
                    "type": "string"
                  }
                }
              }
            },
            "admin": {
              "type": "boolean",
              "default": false
            },
            "applications": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "archived": {
                    "type": "boolean",
                    "default": false
                  },
                  "commit": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "instanceType": {
                    "type": "string"
                  },
                  "instanceVariant": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "variantSlug": {
                    "type": "string"
                  }
                }
              }
            },
            "avatar": {
              "type": "string"
            },
            "consumers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "string"
                  }
                }
              }
            },
            "id": {
              "type": "string"
            },
            "lang": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": ["addons", "admin", "applications", "avatar", "id", "lang", "name"]
        }
      }
    },
    "Token": {
      "type": "object",
      "required": ["consumer", "creationDate", "lastUtilisation", "rights", "token"],
      "properties": {
        "consumer": {
          "$ref": "#/definitions/Consumer"
        },
        "creationDate": {
          "type": "integer",
          "format": "int32"
        },
        "lastUtilisation": {
          "type": "string"
        },
        "rights": {
          "$ref": "#/definitions/Rights"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Transaction Id": {
      "type": "object",
      "required": ["transactionId"],
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "The transaction Id"
        }
      },
      "description": "A simple transaction id"
    },
    "URL": {
      "type": "object",
      "required": ["url"],
      "properties": {
        "url": {
          "type": "string"
        }
      },
      "description": "Must be a valid HTTP URL"
    },
    "User": {
      "type": "object",
      "required": ["address", "admin", "avatar", "canPay", "city", "country", "creationDate", "email", "emailValidated", "id", "lang", "name", "oauthApps", "phone", "zipcode"],
      "properties": {
        "address": {
          "type": "string",
          "description": "The address of the user"
        },
        "admin": {
          "type": "boolean",
          "description": "Is the user an administrator ?",
          "default": false
        },
        "avatar": {
          "type": "string",
          "description": "The location of the user's avatar"
        },
        "canPay": {
          "type": "boolean",
          "description": "Does the user can pay ?",
          "default": false
        },
        "city": {
          "type": "string",
          "description": "The city of the user"
        },
        "country": {
          "type": "string",
          "description": "The country of the user"
        },
        "creationDate": {
          "type": "integer",
          "format": "int64",
          "description": "The creation timestamp of the user"
        },
        "email": {
          "type": "string",
          "description": "The email of the user"
        },
        "emailValidated": {
          "type": "boolean",
          "description": "Does the user email is validate",
          "default": false
        },
        "hasPassword": {
          "type": "boolean",
          "default": false
        },
        "id": {
          "type": "string",
          "description": "The id of the user : `user_${uuid}`"
        },
        "lang": {
          "type": "string",
          "description": "The lang of the user"
        },
        "name": {
          "type": "string",
          "description": "The name of the user"
        },
        "oauthApps": {
          "type": "array",
          "description": "The list of token oauth",
          "items": {
            "type": "string"
          }
        },
        "phone": {
          "type": "string",
          "description": "The phone of the user"
        },
        "preferredMFA": {
          "type": "string"
        },
        "zipcode": {
          "type": "string",
          "description": "The zipcode of the user"
        }
      },
      "description": "A user representation"
    },
    "Variant": {
      "type": "object",
      "required": ["deployType", "id", "logo", "name", "slug"],
      "properties": {
        "deployType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "Vhost": {
      "type": "object",
      "required": ["fqdn"],
      "properties": {
        "fqdn": {
          "type": "string"
        }
      }
    },
    "WannabeAddon": {
      "type": "object",
      "required": ["name", "payment", "plan", "providerId", "region"],
      "properties": {
        "name": {
          "type": "string"
        },
        "payment": {
          "$ref": "#/definitions/PaymentData"
        },
        "plan": {
          "type": "string"
        },
        "providerId": {
          "type": "string",
          "description": ""
        },
        "region": {
          "type": "string"
        }
      }
    },
    "WannabeAddonBilling": {
      "type": "object",
      "required": ["cost"],
      "properties": {
        "cost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WannabeAddonProvider": {
      "type": "object",
      "required": ["api", "id", "name"],
      "properties": {
        "api": {
          "$ref": "#/definitions/WannabeAddonProviderAPI"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "WannabeAddonProviderAPI": {
      "type": "object",
      "required": ["config_vars", "password", "sso_salt"],
      "properties": {
        "config_vars": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "password": {
          "type": "string"
        },
        "production": {
          "$ref": "#/definitions/WannabeAddonProviderAPIUrl"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sso_salt": {
          "type": "string"
        },
        "test": {
          "$ref": "#/definitions/WannabeAddonProviderAPIUrl"
        }
      }
    },
    "WannabeAddonProviderAPIUrl": {
      "type": "object",
      "required": ["base_url", "sso_url"],
      "properties": {
        "base_url": {
          "type": "string"
        },
        "sso_url": {
          "type": "string"
        }
      }
    },
    "WannabeApplication": {
      "type": "object",
      "required": ["deploy", "enabled", "instance", "maxInstances", "minInstances", "name", "zone"],
      "properties": {
        "archived": {
          "type": "boolean",
          "default": false
        },
        "cancelOnPush": {
          "type": "boolean",
          "default": false
        },
        "deploy": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "favourite": {
          "type": "boolean",
          "default": false
        },
        "homogeneous": {
          "type": "boolean",
          "default": false
        },
        "instanceType": {
          "type": "string"
        },
        "instanceVersion": {
          "type": "string"
        },
        "instanceVariant": {
          "type": "string"
        },
        "maxFlavor": {
          "type": "string"
        },
        "maxInstances": {
          "type": "integer",
          "format": "int32"
        },
        "minFlavor": {
          "type": "string"
        },
        "minInstances": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "oauthApp": {
          "$ref": "#/definitions/WannabeOauthApp"
        },
        "oauthAppId": {
          "type": "string"
        },
        "oauthService": {
          "type": "string"
        },
        "separateBuild": {
          "type": "boolean",
          "default": false
        },
        "shutdownable": {
          "type": "boolean",
          "default": false
        },
        "stickySessions": {
          "type": "boolean",
          "default": false
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "zone": {
          "type": "string"
        }
      }
    },
    "WannabeConsumer": {
      "type": "object",
      "required": ["baseUrl", "name", "rights", "url"],
      "properties": {
        "baseUrl": {
          "$ref": "#/definitions/URL"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "picture": {
          "type": "string",
          "description": ""
        },
        "rights": {
          "type": "object",
          "properties": {
            "activated": {
              "type": "boolean",
              "default": false
            },
            "right": {
              "type": "string"
            }
          },
          "required": ["activated", "right"]
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      }
    },
    "WannabeEnv": {
      "type": "object",
      "required": ["name", "value"],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WannabeFeature": {
      "type": "object",
      "required": ["name", "type"],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "BOOLEAN, INTERVAL, FILESIZE, NUMBER, PERCENTAGE"
        }
      }
    },
    "WannabeMember": {
      "type": "object",
      "required": ["email", "role"],
      "properties": {
        "email": {
          "type": "string"
        },
        "job": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "WannabeOauthApp": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "WannabeOrganisation": {
      "type": "object",
      "required": ["description", "name"],
      "properties": {
        "VAT": {
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "The address of the organisation."
        },
        "city": {
          "type": "string",
          "description": "The city of the organisation."
        },
        "company": {
          "type": "string",
          "description": "The company's name of the organisation."
        },
        "country": {
          "type": "string",
          "description": "The country of the organisation."
        },
        "description": {
          "type": "string",
          "description": "The description of the organisation."
        },
        "name": {
          "type": "string",
          "description": "The name of the organisation."
        },
        "zipcode": {
          "type": "string",
          "description": "The zipcode of the city's organisation."
        }
      }
    },
    "WannabePlan": {
      "type": "object",
      "required": ["features", "name", "price", "slug"],
      "properties": {
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WannabePlanFeature"
          }
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "WannabePlanFeature": {
      "type": "object",
      "required": ["name", "type", "value"],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WannabeUser": {
      "type": "object",
      "required": ["email", "password", "terms"],
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": ""
        },
        "lang": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "terms": {
          "type": "boolean",
          "default": false
        },
        "zipcode": {
          "type": "string"
        }
      },
      "description": ""
    },
    "Zone": {
      "type": "object",
      "required": ["correspondingRegion", "internal", "name"],
      "properties": {
        "correspondingRegion": {
          "type": "string"
        },
        "internal": {
          "type": "boolean",
          "default": false
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}